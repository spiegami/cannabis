Diciamo che passiamo a una logica nuova, in cui usiamo "claim_id" invece di "claim" e registriamo tutti i claim in un nuovo file "claims.json", del tipo

{
  "1": "Piove",
  "2": "Prendo l'ombrello",
  "3": "Non sta piovendo",
  "4": "Se apro le mani con i palmi verso il cielo non si bagnano",
  "5": "Non è detto che se piove necessariamente prendi l'ombrello, magari te lo dimentichi"
}

per comodità in questo esempio quando di reasons ce n'è una sola evito di specificare il connector

dunque il ragionamento "prendo l'ombrello perché piove" diventa

{
  "claim_id": 2,
  "reasons": [{"claim_id": 1}]
}

Possiamo introdurre le obiezioni ad un claim con il campo "claim_objections", che è una lista di teoremi, ciascuno dei quali pone un'obiezione alla verità del claim, ad esempio

{
  "claim_id": 2,
  "reasons": [
    {"claim_id": 1,
      "claim_objections": [
        {"claim_id": 3,
          "reasons": [{"claim_id": 4}]
        }
      ]
    }
  ],
}

E possiamo introdurre anche le obiezioni ad un ragionamento con il campo "reasons_objections", che è una lista dei teoremi, ciascuno dei quali afferma che anche se le ragioni fossero vere non implicano che il claim sia vero, ad esempio

{
  "claim_id": 2,
  "reasons": [{"claim_id": 1}],
  "reasons_objections": [{"claim_id": 5}]
}


Se come struttura ti piace e ti sembra sensata, puoi direttamente incominciare ad usarla, però con i campi claim e non claim_id, e specificando sempre il connector


{
  "claim": "SI, è giusto modificare ruolo e funzioni del Senato",
  "connector": "o",
  "objections": [
    {"type": "to_claim",
      "objected_claim": "SI, è giusto modificare ruolo e funzioni del Senato",
      "theorem": { "claim": "NO, non è giusto modificare ruolo e funzioni del Senato" }
    },
    {"type": "to_reason",
      "objected_claim": "perché se viene eletto diversamente dalla Camera è giusto che abbia funzioni diverse",
      "theorem": { "claim": "non è un buon motivo per eleggerlo diversamente, è solo un motivo per dargli diverse funzioni nel caso in cui venga eletto diversamente"}
    }
  ],
  "reasons": [
    {"claim": "perché se viene eletto diversamente dalla Camera è giusto che abbia funzioni diverse"},
  ]
}

container totale anche per logo e menu sopra, massimo X (1600? 1300?), come medium
titolo "si discute su" più grande
tutto più grande
interlinea minore tra i sottoggetti




http://stackoverflow.com/questions/2168442/many-to-many-relationship-with-the-same-model-in-rails

Claim
  id: integer, unique
  value: text, unique
  has_many: theorems
  has_many: claim_objections

Theorem
  id: integer, unique
  belongs_to: claim
  connector: string, uno tra "and", "or", "how"

class User (Theorem) < ActiveRecord::Base
  # follower_follows "names" the Follow join table for accessing through the follower association
  has_many :follower_follows, foreign_key: :followee_id, class_name: "Follow" 
  # source: :follower matches with the belong_to :follower identification in the Follow model 
  has_many :followers, through: :follower_follows, source: :follower

  # followee_follows "names" the Follow join table for accessing through the followee association
  has_many :followee_follows, foreign_key: :follower_id, class_name: "Follow"    
  # source: :followee matches with the belong_to :followee identification in the Follow model   
  has_many :followees, through: :followee_follows, source: :followee
end

  has_many: claim_objections

Arguments
  id: integer, unique
class Follow < ActiveRecord::Base
  belongs_to :follower, foreign_key: "follower_id", class_name: "User"
  belongs_to :followee, foreign_key: "followee_id", class_name: "User"
end
  connector: string, uno tra "and", "or", "how"

ClaimObjection
  id: integer, unique
  belongs_to: claim
  belongs_to: theorem

ArgumentObjection

Objection
  objection_type: string, uno tra "to_claim", "to_argument"
  belongs_to: theorems, as: objected_theorem

